rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Check if the user is a member of the chat
    function isMember(chatId) {
      return request.auth != null && get(/databases/$(database)/documents/chats/$(chatId)).data.members[request.auth.uid] == true;
    }
    
    // Check if the user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Users can only read/write their own document
    // But other signed-in users can read public profile info
    match /users/{userId} {
      allow write: if request.auth.uid == userId;
      allow read: if isSignedIn();
    }

    match /chats/{chatId} {
      allow read, update: if isMember(chatId);
      // Any signed-in user can create a chat
      allow create: if isSignedIn();
      allow delete: if false; // Deletions should be handled by a function

      match /messages/{messageId} {
        allow read: if isMember(chatId);
        // Only a member can create a message
        allow create: if isMember(chatId) && request.auth.uid == request.resource.data.senderId;
        // Updates/deletes are safer via functions to handle logic like "deleted for me/all"
        allow update, delete: if false;
      }
    }
  }
}
