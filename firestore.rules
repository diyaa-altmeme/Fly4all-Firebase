rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions for checking permissions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Assumes user document has a 'roles' map, e.g., { "admin": true }
    function hasRole(role) {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }

    function isAdmin() {
      return hasRole('admin');
    }

    // Specific rules for each collection
    match /users/{userId} {
      allow read, write: if isOwner(userId) || isAdmin();
      allow read: if isAuthenticated();
    }

    match /roles/{roleId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    match /clients/{clientId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if hasRole('editor') || isAdmin();
    }

    match /suppliers/{supplierId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if hasRole('editor') || isAdmin();
    }

    match /boxes/{boxId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAdmin();
    }

    match /bookings/{bookingId} {
        allow read: if isAuthenticated();
        allow create, update, delete: if hasRole('editor') || isAdmin();
    }

    match /visaBookings/{visaId} {
        allow read: if isAuthenticated();
        allow create, update, delete: if hasRole('editor') || isAdmin();
    }
    
    match /journal-vouchers/{voucherId} {
        allow read: if isAuthenticated();
        allow create, update, delete: if hasRole('editor') || isAdmin();
    }

    match /subscriptions/{subId} {
        allow read: if isAuthenticated();
        allow create, update, delete: if hasRole('editor') || isAdmin();
    }

    match /subscription_installments/{installmentId} {
        allow read: if isAuthenticated();
        allow write: if hasRole('editor') || isAdmin();
    }
    
    match /payments/{paymentId} {
        allow read: if isAuthenticated();
        allow create, write: if hasRole('editor') || isAdmin();
    }

    match /remittances/{remittanceId} {
        allow read: if isAuthenticated();
        allow write: if hasRole('editor') || isAdmin();
    }
    
    match /sequences/{sequenceId} {
      allow read, write: if isAuthenticated(); // Should be locked down further
    }
    
    match /settings/{docId} {
        allow read: if isAuthenticated();
        allow write: if isAdmin();
    }
    
    match /audit_logs/{logId} {
        allow read: if isAdmin();
        allow create: if true; // Allow services and clients to write logs
    }
    
    match /notifications/{notifId} {
        allow read, write: if isOwner(resource.data.userId);
        allow create: if isAuthenticated();
    }

    // Default rule to deny all access to any other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}