
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // Helper Functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // Check if the file type is one of the allowed types.
    function isValidFileType() {
      return request.resource.contentType.matches('image/.*') ||
             request.resource.contentType.matches('application/pdf') ||
             request.resource.contentType.matches('application/msword') ||
             request.resource.contentType.matches('application/vnd.openxmlformats-officedocument.wordprocessingml.document') ||
             request.resource.contentType.matches('text/.*');
    }

    // Check if the file size is within the allowed limit (e.g., 10MB).
    function isValidFileSize() {
      return request.resource.size < 10 * 1024 * 1024;
    }

    // Check if the user is a member of the chat mentioned in the file path.
    function isChatMember(chatId) {
        return exists(/databases/(default)/documents/chats/$(chatId)) &&
               get(/databases/(default)/documents/chats/$(chatId)).data.members[request.auth.uid] == true;
    }

    // Main rule for chat attachments.
    // Path format: chat_attachments/{chatId}/{fileName}
    match /chat_attachments/{chatId}/{allPaths=**} {
      // Any authenticated user can upload a file, as long as it meets size and type criteria.
      // The path security is enforced by the client-side code which constructs the correct path.
      allow write: if isSignedIn() && isValidFileType() && isValidFileSize();

      // Only members of the chat can read its attachments.
      allow read: if isChatMember(chatId);
    }
  }
}
