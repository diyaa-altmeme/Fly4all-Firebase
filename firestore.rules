rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if the user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user is a member of a chat
    function isMember(chatId) {
      return isAuthenticated() && get(/databases/$(database)/documents/chats/$(chatId)).data.members[request.auth.uid] == true;
    }
    
    // Allow users to read/write their own user document
    match /users/{userId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }

    // Rules for the chats collection
    match /chats/{chatId} {
      // Any member of the chat can read or update it (e.g., to change title or last message)
      allow read, update: if isMember(chatId);
      // Only authenticated users can create new chats
      allow create: if isAuthenticated();
      // Deleting chats should be handled by a secure function
      allow delete: if false;

      // Rules for messages within a chat
      match /messages/{messageId} {
        // Any member can read messages
        allow read: if isMember(chatId);
        // Only a member can create a message, and they must be the sender
        allow create: if isMember(chatId) && request.resource.data.senderId == request.auth.uid;
        // Only the original sender can update (edit) or "delete" (mark as deleted) their own message
        allow update: if isMember(chatId) && resource.data.senderId == request.auth.uid;
        // Disallow permanent deletion from client
        allow delete: if false;
      }
    }
    
    // User-specific chat summaries can only be accessed by the user themselves
    match /userChats/{userId}/{document=**} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }
  }
}
